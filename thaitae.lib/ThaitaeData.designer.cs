#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace thaitae.lib
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Thaitae")]
	public partial class ThaitaeDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLeague(League instance);
    partial void UpdateLeague(League instance);
    partial void DeleteLeague(League instance);
    #endregion
		
		public ThaitaeDataDataContext() : 
				base(global::thaitae.lib.Properties.Settings.Default.ThaitaeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ThaitaeDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ThaitaeDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ThaitaeDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ThaitaeDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<League> Leagues
		{
			get
			{
				return this.GetTable<League>();
			}
		}
		
		public System.Data.Linq.Table<Season> Seasons
		{
			get
			{
				return this.GetTable<Season>();
			}
		}
		
		public System.Data.Linq.Table<Team> Teams
		{
			get
			{
				return this.GetTable<Team>();
			}
		}
		
		public System.Data.Linq.Table<Match> Matches
		{
			get
			{
				return this.GetTable<Match>();
			}
		}
		
		public System.Data.Linq.Table<TeamInMatch> TeamInMatches
		{
			get
			{
				return this.GetTable<TeamInMatch>();
			}
		}
		
		public System.Data.Linq.Table<PlayerInMatch> PlayerInMatches
		{
			get
			{
				return this.GetTable<PlayerInMatch>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="tamujin.League")]
	public partial class League : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LeagueId;
		
		private string _LeagueName;
		
		private int _LeagueType;
		
		private string _LeagueDesc;
		
		private int _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLeagueIdChanging(int value);
    partial void OnLeagueIdChanged();
    partial void OnLeagueNameChanging(string value);
    partial void OnLeagueNameChanged();
    partial void OnLeagueTypeChanging(int value);
    partial void OnLeagueTypeChanged();
    partial void OnLeagueDescChanging(string value);
    partial void OnLeagueDescChanged();
    partial void OnActiveChanging(int value);
    partial void OnActiveChanged();
    #endregion
		
		public League()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeagueId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LeagueId
		{
			get
			{
				return this._LeagueId;
			}
			set
			{
				if ((this._LeagueId != value))
				{
					this.OnLeagueIdChanging(value);
					this.SendPropertyChanging();
					this._LeagueId = value;
					this.SendPropertyChanged("LeagueId");
					this.OnLeagueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeagueName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LeagueName
		{
			get
			{
				return this._LeagueName;
			}
			set
			{
				if ((this._LeagueName != value))
				{
					this.OnLeagueNameChanging(value);
					this.SendPropertyChanging();
					this._LeagueName = value;
					this.SendPropertyChanged("LeagueName");
					this.OnLeagueNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeagueType", DbType="Int NOT NULL")]
		public int LeagueType
		{
			get
			{
				return this._LeagueType;
			}
			set
			{
				if ((this._LeagueType != value))
				{
					this.OnLeagueTypeChanging(value);
					this.SendPropertyChanging();
					this._LeagueType = value;
					this.SendPropertyChanged("LeagueType");
					this.OnLeagueTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeagueDesc", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string LeagueDesc
		{
			get
			{
				return this._LeagueDesc;
			}
			set
			{
				if ((this._LeagueDesc != value))
				{
					this.OnLeagueDescChanging(value);
					this.SendPropertyChanging();
					this._LeagueDesc = value;
					this.SendPropertyChanged("LeagueDesc");
					this.OnLeagueDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Int NOT NULL")]
		public int Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="tamujin.Season")]
	public partial class Season
	{
		
		private System.Nullable<int> _LeagueId;
		
		private System.Nullable<int> _TeamId;
		
		private System.Nullable<int> _SeasonId;
		
		private string _SeasonName;
		
		private string _SeasonDesc;
		
		public Season()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeagueId", DbType="Int")]
		public System.Nullable<int> LeagueId
		{
			get
			{
				return this._LeagueId;
			}
			set
			{
				if ((this._LeagueId != value))
				{
					this._LeagueId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", DbType="Int")]
		public System.Nullable<int> TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					this._TeamId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeasonId", DbType="Int")]
		public System.Nullable<int> SeasonId
		{
			get
			{
				return this._SeasonId;
			}
			set
			{
				if ((this._SeasonId != value))
				{
					this._SeasonId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeasonName", DbType="NVarChar(50)")]
		public string SeasonName
		{
			get
			{
				return this._SeasonName;
			}
			set
			{
				if ((this._SeasonName != value))
				{
					this._SeasonName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeasonDesc", DbType="NVarChar(50)")]
		public string SeasonDesc
		{
			get
			{
				return this._SeasonDesc;
			}
			set
			{
				if ((this._SeasonDesc != value))
				{
					this._SeasonDesc = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="tamujin.Team")]
	public partial class Team
	{
		
		private int _TeamId;
		
		private string _TeamName;
		
		private string _TeamDesc;
		
		private int _Active;
		
		public Team()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					this._TeamId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TeamName
		{
			get
			{
				return this._TeamName;
			}
			set
			{
				if ((this._TeamName != value))
				{
					this._TeamName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamDesc", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TeamDesc
		{
			get
			{
				return this._TeamDesc;
			}
			set
			{
				if ((this._TeamDesc != value))
				{
					this._TeamDesc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Int NOT NULL")]
		public int Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="tamujin.Match")]
	public partial class Match
	{
		
		private System.Nullable<int> _MatchId;
		
		private System.Nullable<int> _Team1Id;
		
		private System.Nullable<int> _Team2Id;
		
		private System.Nullable<int> _SeasonId;
		
		private string _MatchDesc;
		
		public Match()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchId", DbType="Int")]
		public System.Nullable<int> MatchId
		{
			get
			{
				return this._MatchId;
			}
			set
			{
				if ((this._MatchId != value))
				{
					this._MatchId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team1Id", DbType="Int")]
		public System.Nullable<int> Team1Id
		{
			get
			{
				return this._Team1Id;
			}
			set
			{
				if ((this._Team1Id != value))
				{
					this._Team1Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team2Id", DbType="Int")]
		public System.Nullable<int> Team2Id
		{
			get
			{
				return this._Team2Id;
			}
			set
			{
				if ((this._Team2Id != value))
				{
					this._Team2Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeasonId", DbType="Int")]
		public System.Nullable<int> SeasonId
		{
			get
			{
				return this._SeasonId;
			}
			set
			{
				if ((this._SeasonId != value))
				{
					this._SeasonId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchDesc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MatchDesc
		{
			get
			{
				return this._MatchDesc;
			}
			set
			{
				if ((this._MatchDesc != value))
				{
					this._MatchDesc = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="tamujin.TeamInMatch")]
	public partial class TeamInMatch
	{
		
		private System.Nullable<int> _TeamId;
		
		private System.Nullable<int> _MatchId;
		
		private System.Nullable<int> _TeamScore;
		
		private System.Nullable<int> _TeamYellowCard;
		
		private System.Nullable<int> _TeamRedCard;
		
		private System.Nullable<int> _TeamScoreStatus;
		
		public TeamInMatch()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", DbType="Int")]
		public System.Nullable<int> TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					this._TeamId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchId", DbType="Int")]
		public System.Nullable<int> MatchId
		{
			get
			{
				return this._MatchId;
			}
			set
			{
				if ((this._MatchId != value))
				{
					this._MatchId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamScore", DbType="Int")]
		public System.Nullable<int> TeamScore
		{
			get
			{
				return this._TeamScore;
			}
			set
			{
				if ((this._TeamScore != value))
				{
					this._TeamScore = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamYellowCard", DbType="Int")]
		public System.Nullable<int> TeamYellowCard
		{
			get
			{
				return this._TeamYellowCard;
			}
			set
			{
				if ((this._TeamYellowCard != value))
				{
					this._TeamYellowCard = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamRedCard", DbType="Int")]
		public System.Nullable<int> TeamRedCard
		{
			get
			{
				return this._TeamRedCard;
			}
			set
			{
				if ((this._TeamRedCard != value))
				{
					this._TeamRedCard = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamScoreStatus", DbType="Int")]
		public System.Nullable<int> TeamScoreStatus
		{
			get
			{
				return this._TeamScoreStatus;
			}
			set
			{
				if ((this._TeamScoreStatus != value))
				{
					this._TeamScoreStatus = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="tamujin.PlayerInMatch")]
	public partial class PlayerInMatch
	{
		
		private System.Nullable<int> _PlayerId;
		
		private System.Nullable<int> _Teamid;
		
		private System.Nullable<int> _MatchId;
		
		private string _PlayerName;
		
		private System.Nullable<int> _PlayerGoalScore;
		
		private System.Nullable<int> _PlayerYellowCard;
		
		private System.Nullable<int> _PlayerRedCard;
		
		public PlayerInMatch()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerId", DbType="Int")]
		public System.Nullable<int> PlayerId
		{
			get
			{
				return this._PlayerId;
			}
			set
			{
				if ((this._PlayerId != value))
				{
					this._PlayerId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teamid", DbType="Int")]
		public System.Nullable<int> Teamid
		{
			get
			{
				return this._Teamid;
			}
			set
			{
				if ((this._Teamid != value))
				{
					this._Teamid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchId", DbType="Int")]
		public System.Nullable<int> MatchId
		{
			get
			{
				return this._MatchId;
			}
			set
			{
				if ((this._MatchId != value))
				{
					this._MatchId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PlayerName
		{
			get
			{
				return this._PlayerName;
			}
			set
			{
				if ((this._PlayerName != value))
				{
					this._PlayerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerGoalScore", DbType="Int")]
		public System.Nullable<int> PlayerGoalScore
		{
			get
			{
				return this._PlayerGoalScore;
			}
			set
			{
				if ((this._PlayerGoalScore != value))
				{
					this._PlayerGoalScore = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerYellowCard", DbType="Int")]
		public System.Nullable<int> PlayerYellowCard
		{
			get
			{
				return this._PlayerYellowCard;
			}
			set
			{
				if ((this._PlayerYellowCard != value))
				{
					this._PlayerYellowCard = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerRedCard", DbType="Int")]
		public System.Nullable<int> PlayerRedCard
		{
			get
			{
				return this._PlayerRedCard;
			}
			set
			{
				if ((this._PlayerRedCard != value))
				{
					this._PlayerRedCard = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
